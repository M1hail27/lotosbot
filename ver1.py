from aiogram import Dispatcher,F,types,Bot
from datetime import datetime
import asyncio
from aiogram.types import KeyboardButton,ReplyKeyboardMarkup,FSInputFile
import os
from aiogram.filters import CommandStart,Command
from dotenv import find_dotenv,load_dotenv
from pprint import pprint
import time

load_dotenv(find_dotenv())
target_group_id =os.getenv('GROUP')

bot = Bot(token = os.getenv('TOKEN'))
dp = Dispatcher(bot=bot)

markup_start = ReplyKeyboardMarkup(
    keyboard = [
        [KeyboardButton(text='–ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üì¶'),KeyboardButton(text='–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é üë©‚Äçüíº')]
        ,]
    ,resize_keyboard=True)

dict_offer = {'date':'','number':'','name':'','mark':'','size':''}
marks = ['M100','M150','M200','M250','M300','M350','M400','M450','M500']

def marki(message: types.Message, dict_offer):
    dict_offer['mark'] = message.text
    return message.answer('–°–∫—ñ–ª—å–∫–∏ –∫—É–±—ñ–≤ –±–µ—Ç–æ–Ω—É –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ ?', reply_markup=types.ReplyKeyboardRemove())

@dp.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer(f'–í–∞—Å –≤—ñ—Ç–∞—î –±–æ—Ç –∫–æ–º–ø–∞–Ω—ñ—ó –õ–û–¢–û–° üëã \n'
                                          f'–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ —à–≤–∏–¥–∫—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é üë©‚Äçüíº \n–ê–±–æ –∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üöõ')
    await message.answer('–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É', reply_markup=markup_start)

@dp.message(F.text == '/menu')
async def menu(message: types.Message):
    await message.answer('–ü–æ—á–∞—Ç–∫–æ–≤–µ –º–µ–Ω—é', reply_markup=markup_start)

@dp.message(F.text == '–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é üë©‚Äçüíº')
async def echo(message: types.Message):
        markup_consul = ReplyKeyboardMarkup(keyboard=[
                                                       [KeyboardButton(text='PriceListüßæ')],
                                                       [KeyboardButton(text='–Ø–∫ –∑–∞–º–æ–≤–∏—Ç–∏ –±–µ—Ç–æ–Ω üìû')],
                                                       [KeyboardButton(text='–î–æ—Å—Ç–∞–≤–∫–∞üöõ')],
                                                       [KeyboardButton(text='üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥')],
                                                       ],)
        await message.answer('–ó —è–∫–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ ?', reply_markup=markup_consul)

@dp.message(F.text == 'PriceListüßæ')
async def price(message: types.Message):
    await bot.send_photo(chat_id=message.chat.id, photo=FSInputFile(r'C:\Users\admin\PycharmProjects\lotosbot\.venv\img\pricelist.jpg'))

@dp.message(F.text == '–Ø–∫ –∑–∞–º–æ–≤–∏—Ç–∏ –±–µ—Ç–æ–Ω üìû')
async def tutorial_order(message: types.Message):
    await message.answer('–©–æ–± –∑–∞–º–æ–≤–∏—Ç–∏ –±–µ—Ç–æ–Ω –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –∑–∞ –Ω–æ–º–µ—Ä–æ–º\n+380 721-45-45\n'
                                         '–ê–±–æ –∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä—è–º–æ –≤ –±–æ—Ç—ñ,–¥–ª—è —Ü—å–æ–≥–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é)\n'
                                         '\n–ü—ñ—Å–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏) ')

@dp.message(F.text == '–î–æ—Å—Ç–∞–≤–∫–∞üöõ')
async def delivery(message: types.Message):
    await message.answer('–î–æ—Å—Ç–∞–≤–∫–∞ –º–æ–∂–µ –±—É—Ç–∏ –∑–¥—ñ–π—Å–Ω–µ–Ω–Ω–∞ –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω,–∞–±–æ –Ω–∞ –±—É–¥—å —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –≤–∞–º —á–∞—Å)')

@dp.message(F.text == '–ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üì¶')
async def order(message: types.Message):

    markup_order = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='M100'),KeyboardButton(text='M150')],
                                         [KeyboardButton(text='M200'),KeyboardButton(text='M250')],
                                         [KeyboardButton(text='M300'),KeyboardButton(text='M350')],
                                         [KeyboardButton(text='M400'),KeyboardButton(text='M450')],
                                         [KeyboardButton(text='M500')],],resize_keyboard=True)

    await message.answer('–û–±–µ—Ä—ñ—Ç—å –º–∞—Ä–∫—É –±–µ—Ç–æ–Ω—É', reply_markup=markup_order)

@dp.message(F.text == 'üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥')
async def back(message: types.Message):
    await message.answer('–ü–æ—á–∞—Ç–∫–æ–≤–µ –º–µ–Ω—é',reply_markup=markup_start)

@dp.message(F.text =='‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚úÖ')
async def finish(message: types.Message):
    global dict_offer, target_group_id
    dict_offer['date'] = f'{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}'
    dict_offer['name'] = message.chat.first_name
    await message.answer('–î—è–∫—É—é –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ! \n–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ –∑–≤—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ üë©‚Äçüíº',reply_markup=types.ReplyKeyboardRemove())

    with open('data.txt', 'a', encoding='utf-8') as fl:
        fl.write('\n')
        pprint(dict_offer, stream=fl)
    await bot.send_message(chat_id = target_group_id, text=f'{str(dict_offer)}')

@dp.message(F.text)
async def num(message: types.Message):
    global dict_offer,marks
    if message.text in marks:
        dict_offer['mark'] = message.text
        await message.answer('–°–∫—ñ–ª—å–∫–∏ –∫—É–±—ñ–≤ –±–µ—Ç–æ–Ω—É –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ ?', reply_markup=types.ReplyKeyboardRemove())
    else:
        for i in message.text:

            if i.isalpha():
                await message.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ', reply_markup=markup_start)
                break
            else:
                dict_offer['size'] = message.text
                markup_num = ReplyKeyboardMarkup(
                    keyboard=[[KeyboardButton(text='–ù–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É', request_contact=True)],
                              ])
                await message.answer('–ù–∞–¥–∞–π—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç ‚¨áÔ∏è', reply_markup=markup_num)
                break

@dp.message(F.content_type == 'contact')
async def handle_contact(message):
    global dict_offer
    contact = message.contact
    dict_offer['number'] = contact.phone_number
    markup_acess = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚úÖ')]])
    await message.answer('–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚¨áÔ∏è', reply_markup=markup_acess)

async def main():
    await dp.start_polling(bot)

asyncio.run(main())